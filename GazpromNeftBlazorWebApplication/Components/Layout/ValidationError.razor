@using System.Linq.Expressions
@using System.Reflection
@using System.ComponentModel.DataAnnotations
@using System.ComponentModel
@using GazpromNeftBlazorWebApplication.DTO
@typeparam T
@foreach(var error in _memberErrors)
{
    <span class="@spanClass">@error.ErrorMessage</span>
}

@code {
    [Parameter] public Expression<Func<T>> For { get; set; }
    [Parameter]
    [Required]
    public IEnumerable<ValidationErrorDto> ErrorList { get; set; } = new List<ValidationErrorDto>();
    [Parameter] public string spanClass { get; set; } = "text-danger";
    private IEnumerable<ValidationErrorDto> _memberErrors => GetError();

    protected override void OnInitialized()
    {
        GetError();
    }

    private IEnumerable<ValidationErrorDto> GetError()
    {
        var expression = (MemberExpression)For.Body;
        var memberName = expression.Member.Name;
        return ErrorList.Where(e => e.PropertyName.Equals(memberName));
    }
}